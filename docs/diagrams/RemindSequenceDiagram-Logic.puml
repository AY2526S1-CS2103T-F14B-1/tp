@startuml
!include style.puml
skinparam ArrowFontStyle plain

actor User as user
box UI UI_COLOR_T1
participant ":MainWindow" as MainWindow UI_COLOR
participant ":ResultDisplay" as ResultDisplay UI_COLOR
end box

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant "r:RemindCommand" as RemindCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":Person" as Person MODEL_COLOR
end box

user -> LogicManager : execute("remind")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("remind")
activate AddressBookParser

AddressBookParser --> LogicManager : RemindCommand
deactivate AddressBookParser

LogicManager -> RemindCommand : execute()
activate RemindCommand

RemindCommand -> Model : getFilteredPersonList()
activate Model
Model --> RemindCommand : personList
deactivate Model

loop for each person in personList
    RemindCommand -> Person : getBirthday()
    activate Person
    Person --> RemindCommand : birthday
    deactivate Person

    RemindCommand -> RemindCommand : calculateDaysUntilBirthday(birthday, today)
    RemindCommand -> RemindCommand : categorize into today/upcoming lists
end

RemindCommand -> RemindCommand : buildReminderString(todayBirthdays, upcomingBirthdays)
RemindCommand --> LogicManager : CommandResult with reminder message
deactivate RemindCommand

LogicManager --> MainWindow : CommandResult
deactivate LogicManager

MainWindow -> ResultDisplay : setFeedbackToUser(reminderMessage)
activate ResultDisplay
ResultDisplay --> user : displays reminder in main window
deactivate ResultDisplay
@enduml